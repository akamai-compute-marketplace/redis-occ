---
# roles/redis-sentinel/tasks/sentinel.yml

# configure redis-sentinel

- name: create backup of redis-sentinel configurations
  copy: 
    src: /etc/redis/sentinel.conf
    dest: /etc/redis/sentinel.conf.bak
    remote_src: yes
    owner: redis
    group: redis
    mode: '0644'

- name: removing redis sentinel default values
  replace:
    path: /etc/redis/sentinel.conf
    regexp: "{{ item.search }}"
    replace: "{{ item.replace }}"
  loop:
    - { search: '^(port)', replace: '# \1' }
    - { search: '^(bind)', replace: '# \1' }
    - { search: '^(daemonize)', replace: '# \1' }
    - { search: '^(sentinel monitor)', replace: '# \1' }
    - { search: '^(sentinel auth-pass)', replace: '# \1' }
    - { search: '^(protected-mode)', replace: '# \1' }

- name: updating sentinel config in the cluster
  blockinfile:
    path: /etc/redis/sentinel.conf
    marker: "# {mark} LINODE OCC"
    block: |
      # TLS/SSL
      port 0
      tls-port 26379
      tls-cert-file {{ redis_cert }}
      tls-key-file {{ redis_key }}
      tls-dh-params-file {{ redis_dh }}
      tls-ca-cert-file {{ redis_cacert }}
      tls-auth-clients optional
      tls-replication yes
      # general    
      bind 127.0.0.1 ::1 {{ redis_data.results[count].instance.ip_priv1 }}
      protected-mode no
      daemonize yes
      sentinel monitor mymaster {{ redis_data.results[0].instance.ip_priv1 }} 6379 2
      sentinel auth-pass mymaster {{ redis_password }}
  run_once: true
  delegate_to: "{{ item }}"
  loop: "{{ groups['all'] }}"
  loop_control:
    index_var: count

- name: starting redis-sentinel on primary
  systemd:
    name: redis-sentinel
    state: started